<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="weibo/DiscussMapper">   <!-- 命名空间，名字可以随意起，只要不冲突即可 -->

    <select id="selectAllDiscuss" resultType="Discuss">
        SELECT *
        FROM discuss
        WHERE visibility = 0
    </select>

    <select id="selectDiscussById" parameterType="int" resultType="Discuss">
        SELECT *
        FROM discuss
        WHERE did = #{id}
              AND visibility = 0
    </select>

    <select id="quickQueryDiscuss" parameterType="String" resultType="Discuss">
        SELECT *
        FROM discuss
        WHERE name LIKE #{key}
              AND visibility = 0
        LIMIT 0, 5
    </select>

    <select id="selectDiscussLike" parameterType="Map" resultType="Discuss">
        SELECT *
        FROM discuss
        WHERE name LIKE #{key}
              OR detail LIKE #{key}
        LIMIT #{startNum}, #{endNum}
    </select>

    <!-- 判断指定话题是否是当前用户建立的 -->
    <select id="judgeUserDiscuss" parameterType="Map" resultType="Map">
        SELECT *
        FROM discuss d
        WHERE did = #{did}
              AND user_id = #{userid}
    </select>

    <select id="selectBlogInDiscuss" parameterType="Map" resultType="Map">
        SELECT *
        FROM blog_discuss d
        LEFT JOIN blog b
        ON d.blog_id = b.bid
        JOIN user u
        ON b.user_id = u.uid
        WHERE d.discuss_id = #{did} AND b.type = 0
        <if test="key != null">
            AND b.content LIKE #{key}
            OR u.nickname LIKE #{key}
        </if>
        GROUP BY d.blog_id
        LIMIT #{startNum},#{endNum}
    </select>

    <!-- 建立话题（话题名不能重复） -->
    <insert id="insertDiscuss" parameterType="Map" useGeneratedKeys="true" keyProperty="did">
        INSERT INTO discuss (name, user_id, detail, start_time)
            SELECT
                #{name},
                #{user_id},
                #{detail},
                #{start_time}
            FROM DUAL
            WHERE NOT EXISTS(SELECT did
                             FROM discuss
                             WHERE name = #{name});
    </insert>

    <update id="updateDiscuss" parameterType="Discuss" useGeneratedKeys="true" keyProperty="did">
        UPDATE discuss
        SET
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="user_id != null">user_id = #{user_id},</if>
            <if test="detail != null">detail = #{detail},</if>
            <if test="start_time != null">start_time = #{start_time},</if>
            <if test="end_time != null">end_time = #{end_time},</if>
            <if test="is_edit != null">is_edit = #{is_edit},</if>
            <if test="release_time != null">release_time = #{release_time},</if>
            <if test="visibility != null">visibility = #{visibility}</if>
        </set>
        WHERE did = #{id}
    </update>
</mapper>