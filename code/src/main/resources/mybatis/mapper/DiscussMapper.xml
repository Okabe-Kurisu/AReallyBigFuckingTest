<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="weibo/DiscussMapper">   <!-- 命名空间，名字可以随意起，只要不冲突即可 -->

    <select id="selectAllDiscuss" resultType="Discuss">
        SELECT *
        FROM discuss
        WHERE visibility = 0
    </select>

    <!-- 搜索指定用户创建的话题（） -->
    <select id="selectSpecUserDiscuss" resultType="Discuss">
        SELECT *
        FROM discuss
        WHERE visibility = 0
              AND user_id = #{uid}
    </select>

    <select id="selectDiscussById" parameterType="int" resultType="Discuss">
        SELECT *
        FROM discuss
        WHERE did = #{id}
              AND visibility = 0
    </select>

    <select id="quickQueryDiscuss" parameterType="String" resultType="Discuss">
        SELECT *
        FROM discuss
        WHERE name LIKE #{key}
              AND visibility = 0
        LIMIT 0, 5
    </select>

    <select id="selectDiscussLike" parameterType="Map" resultType="Discuss">
        SELECT *
        FROM discuss
        WHERE name LIKE #{key}
              OR detail LIKE #{key}
        LIMIT #{startNum}, #{endNum}
    </select>

    <!-- 查询话题数量 -->
    <select id="selectDisCount" resultType="Map">
        SELECT count(did) AS num
        FROM discuss
        WHERE 1=1
        <if test="user_id!=null">
            AND user_id=#{user_id}
        </if>
    </select>

    <!-- 查询话题（正在使用的） -->
    <select id="selectDiscuss" parameterType="Map" resultType="Map">
        SELECT d.*
        <if test="userid != null">
            ,(SELECT COUNT(f.fid) FROM follow f WHERE f.user_id=#{userid} AND f.followed_id=d.did AND f.type=1) AS
            followNum
        </if>
        FROM discuss d,user u
        WHERE d.user_id=u.uid
        AND visibility = 0
        <if test="user_id != null">AND d.user_id = #{user_id}</if>
        <if test="key != null">AND (d.name LIKE #{key} OR d.detail LIKE #{key})</if>
        LIMIT #{startNum}, #{endNum}
    </select>

    <!-- 查询热门话题(查询每个话题下的微博数并排序) -->
    <select id="selectHotDiscuss" resultType="Map">
        SELECT
            d.*,
            (SELECT COUNT(bd.bdid)
             FROM blog_discuss bd
             WHERE d.did = bd.discuss_id) AS blogNum
        FROM
            discuss d
        WHERE
            visibility = 0
        ORDER BY
            blogNum DESC
        LIMIT 0, 5
    </select>

    <select id="getBlogDiscuss" resultType="Integer">
        SELECT b.bid
        FROM blog AS b
            JOIN blog_discuss AS bd
                ON bd.blog_id = b.bid
        WHERE b.type = 0
              AND b.visibility = 0
              and b.release_time &lt;= unix_timestamp(now())
              AND bd.discuss_id = #{did}
    </select>

    <!-- 判断指定话题是否是当前用户建立的 -->
    <select id="judgeUserDiscuss" parameterType="Map" resultType="Map">
        SELECT *
        FROM discuss d
        WHERE did = #{did}
              AND user_id = #{userid}
    </select>

    <!-- 查找用户所关注话题的全部微博 -->
    <select id="selectFollowDisBlog" parameterType="Map" resultType="Map">
        SELECT *,
        (SELECT count(bl.bid) FROM blog bl WHERE bl.comment_on=b.bid AND type=2) AS commentNum,
        (SELECT count(tu.tuid) FROM thumb_up tu WHERE tu.blog_id=b.bid) AS likeNum
        FROM blog_discuss d
        LEFT JOIN blog b
        ON d.blog_id = b.bid
        JOIN user u
        ON b.user_id = u.uid
        WHERE d.discuss_id IN
        <foreach collection="dids" index="index" item="did" open="(" separator="," close=")">
            #{did}
        </foreach>
        AND b.type = 0
        GROUP BY d.blog_id
        LIMIT #{startNum},#{endNum}
    </select>

    <select id="selectBlogInDiscuss" parameterType="Map" resultType="Map">
        SELECT *,
        (SELECT count(bl.bid) FROM blog bl WHERE bl.comment_on=b.bid AND type=2) AS commentNum,
        (SELECT count(tu.tuid) FROM thumb_up tu WHERE tu.blog_id=b.bid) AS likeNum
        FROM blog_discuss d
        LEFT JOIN blog b
        ON d.blog_id = b.bid
        JOIN user u
        ON b.user_id = u.uid
        WHERE d.discuss_id = #{did} AND b.type = 0
        <if test="key != null">
            AND b.content LIKE #{key}
            OR u.nickname LIKE #{key}
        </if>
        GROUP BY d.blog_id
        LIMIT #{startNum},#{endNum}
    </select>

    <!-- 关注话题（插入关注表） -->
    <insert id="insertFollowDis" parameterType="Map" keyProperty="fid" useGeneratedKeys="true">
        INSERT INTO follow (user_id, type, followed_id, time, visibility)
            SELECT
                #{user_id},
                1,
                #{did},
                #{start_time},
                0
            FROM DUAL
            WHERE NOT EXISTS(SELECT fid
                             FROM follow
                             WHERE user_id = #{user_id} AND followed_id = #{did});
    </insert>

    <!-- 建立话题（话题名不能重复:未结束的话题） -->
    <insert id="insertDiscuss" parameterType="Map" keyProperty="did" useGeneratedKeys="true">
        INSERT INTO discuss (name, user_id, detail, start_time, release_time)
            SELECT
                #{name},
                #{user_id},
                #{detail},
                #{start_time},
                #{release_time}
            FROM DUAL
            WHERE NOT EXISTS(SELECT did
                             FROM discuss
                             WHERE name = #{name} AND visibility = 0);
    </insert>

    <update id="updateDiscuss" parameterType="Discuss" useGeneratedKeys="true" keyProperty="did">
        UPDATE discuss
        SET
        <if test="name != null">name = #{name},</if>
        <if test="user_id != null">user_id = #{user_id},</if>
        <if test="detail != null">detail = #{detail},</if>
        <if test="start_time != null">start_time = #{start_time},</if>
        <if test="end_time != null">end_time = #{end_time},</if>
        <if test="release_time != null">release_time = #{release_time},</if>
        <if test="visibility != null">visibility = #{visibility},</if>
        is_edit = CASE
        WHEN is_edit IS NULL THEN
        1 ELSE is_edit + 1
        END
        WHERE did = #{did} AND is_edit &lt; 4 AND user_id=#{user_id}
    </update>
</mapper>