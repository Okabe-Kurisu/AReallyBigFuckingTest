<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="weibo/BlogMapper">
    <select id="queryThumbUpCount" resultType="int" parameterType="int">
        SELECT COUNT(*) FROM thumb_up WHERE
        -- 如果传进来的是用户就返回用户的点赞数
        <if test="uid != null">user_id = #{uid}</if>
        -- 如果传进来是博客就返回博客的点赞数
        <if test="bid != null">blog_id = #{bid}</if>
    </select>

    <select id="queryCommentCount" resultType="int" parameterType="int">
        SELECT COUNT(*) FROM blog WHERE
        <if test="bid != null">comment_on = #{bid}</if>
    </select>

    <!-- 搜索博客 -->
    <select id="selectBlog" parameterType="Map" resultType="Map">  <!-- 书写 SQL 语句 -->
        SELECT *
        FROM blog,user
        WHERE
        blog.user_id=user.uid AND
        (blog.content LIKE "%"#{keyword}"%") AND
        blog.release_time &lt; #{nowtime} AND
        blog.visibility=0 AND blog.type=0
        LIMIT #{startNum},#{endNum}
    </select>

    <!-- 插入搜索记录 -->
    <insert id="insertSearchBlog" parameterType="Map">  <!-- 书写 SQL 语句 -->
        INSERT INTO search_log(user_id,content,date)
        VALUES(#{userid},#{keyword},#{nowtime})
    </insert>

    <!-- 搜索关注者的微博 -->
    <select id="getFollowBlogByUserid" parameterType="Map" resultType="Map">  <!-- 书写 SQL 语句 -->
        SELECT *
        FROM blog
        LEFT JOIN follow
        ON follow.followed_id=blog.user_id
        WHERE follow.user_id=#{userid}
        AND blog.type=0
        AND blog.visibility=0
    </select>

    <!-- 得到今日热点微博 -->
    <select id="getTodayHostBlog" parameterType="Map" resultType="Map">  <!-- 书写 SQL 语句 -->
        SELECT u.*,b.*,
        (SELECT count(bl.bid) FROM blog bl WHERE bl.comment_on=b.bid AND type=1) AS reshareNum,
        (SELECT count(bl.bid) FROM blog bl WHERE bl.comment_on=b.bid AND type=2) AS commentNum,
        (SELECT count(tu.tuid) FROM thumb_up tu WHERE tu.blog_id=b.bid) AS likeNum
        FROM user u,blog b
        WHERE u.uid=b.user_id
        AND b.type=0
        AND b.visibility=0
        AND FROM_UNIXTIME(b.release_time, '%Y-%c-%d')=DATE_FORMAT(NOW(),'%Y-%c-%d')
        AND b.release_time &lt; UNIX_TIMESTAMP(NOW())
    </select>

    <!-- 得到指定用户微博 -->
    <select id="getUserBlogByUserid" parameterType="Map" resultType="Map">  <!-- 书写 SQL 语句 -->
        SELECT *,
        (SELECT count(bl.bid) FROM blog bl WHERE bl.comment_on=b.bid AND type=1) AS reshareNum,
        (SELECT count(bl.bid) FROM blog bl WHERE bl.comment_on=b.bid AND type=2) AS commentNum,
        (SELECT count(tu.tuid) FROM thumb_up tu WHERE tu.blog_id=b.bid) AS likeNum
        FROM user,blog
        WHERE user.uid=blog.user_id
        AND user.uid=#{userid}
        AND type=0
        AND (visibility=0 OR visibility=1)
        ORDER BY blog.release_time DESC
    </select>


    <!-- 发布博客 -->
    <select id="checkAdmin" parameterType="int" resultType="int">
        SELECT user.is_ban
        FROM user
        WHERE user.uid = #{userid}
    </select>
    <insert id="submitBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="bid">
        INSERT INTO blog (user_id, content, multimedia, release_time, type, comment_on, visibility, is_edit, ip_address, brower_sign, is_showName)
            VALUE
            (#{user_id}, #{content}, #{multimedia}, #{release_time}, #{type}, #{comment_on}, #{visibility}, #{is_edit},
                         #{ip_address}, #{brower_sign}, #{is_showName})
    </insert>

    <!-- 删除微博 查用户 -->
    <update id="delBlog" parameterType="int">
        UPDATE blog
        SET visibility = 2
        WHERE
            bid = #{bid}
    </update>

    <!-- 修改微博 用户被封不能改 一天修改微博次数限制-->
    <update id="setBlog" parameterType="blog">
        UPDATE blog
        SET content      = #{content},
            release_time = #{release_time},
            multimedia   = #{multimedia},
            visibility   = #{visibility}
        WHERE
            bid = #{bid}
    </update>

    <!-- 发布博客评论 查用户是否登录和被封  -->
    <insert id="commit" parameterType="Blog" useGeneratedKeys="true" keyProperty="bid">
        INSERT INTO blog (user_id, content, multimedia, release_time, type, comment_on, visibility)
            VALUE (#{user_id}, #{content}, #{multimedia}, #{release_time}, #{type}, #{comment_on}, #{visibility})
    </insert>

    <!-- 点赞微博-->
    <select id="checkThumbUp" parameterType="ThumbUp" resultType="Map">
        SELECT tuid
        FROM thumb_up
        WHERE
            user_id = #{user_id}
            AND
            blog_id = #{blog_id}
    </select>

    <insert id="addThumbUp" parameterType="ThumbUp" useGeneratedKeys="true" keyProperty="tuid">
        INSERT INTO thumb_up (user_id, blog_id, date)
            VALUE (#{user_id}, #{blog_id}, #{date})
    </insert>

    <delete id="delThumbUp" parameterType="int">
        DELETE FROM thumb_up
        WHERE tuid = #{tuid}
    </delete>

    <!-- @用户-->
    <select id="getFiveUser" parameterType="String" resultType="User">
        SELECT *
        FROM user
        WHERE
        <if test="#{_parameter}!=null">
            user.nickname LIKE "%"#{_parameter}"%"
        </if>
        limit 5

    </select>

    <insert id="atUser" parameterType="CallAt" useGeneratedKeys="true" keyProperty="cid">
        INSERT INTO call_at (user_id, blog_id, date)
            VALUE (#{user_id}, #{blog_id}, #{date})
    </insert>

    <!-- 转发微博 只能转发一次，再点击就取消-->
    <select id="forwardBlog" parameterType="int" resultType="Blog">
        SELECT
            bid,
            user_id,
            content,
            release_time,
            type,
            comment_on,
            visibility,
            multimedia
        FROM blog
        WHERE bid = #{bid}
    </select>


    <!-- 收藏微博 是否已经收藏 收藏微博是否被举报-->
    <insert id="collectBlog" parameterType="Favorite" useGeneratedKeys="true" keyProperty="fid">
        INSERT INTO favorite (user_id, blog_id)
            VALUE (#{user_id}, #{blog_id})
    </insert>
    <!-- 举报微博 不能重复举报 验证账号 -->
    <insert id="reportBlog" parameterType="Sensitivity" useGeneratedKeys="true" keyProperty="sid">
        INSERT INTO sensitivity (blog_id, type, details)
            VALUE (#{blog_id}, #{type}, #{details})
    </insert>

    <!-- 向blog_discuss插入记录 -->
    <insert id="blogDiscuss" parameterType="BlogDiscuss" useGeneratedKeys="true" keyProperty="bdid">
        INSERT INTO blog_discuss (blog_id, discuss_id, user_id)
            VALUE (#{blog_id}, #{discuss_id}, #{user_id})
    </insert>
<<<<<<< HEAD

    <!--收集最近正在讨论的微博-->
    <select id="nowTimeHot" parameterType="Map" resultType="Map">
     SELECT *
        FROM thumb_up as tu
        RIGHT JOIN blog AS bc
        ON 1=1
        JOIN blog AS b
        ON b.bid = tu.blog_id
        WHERE
        tu.date > (unix_timestamp() - 3600)
        AND bc.type > 0
        AND bc.release_time > (unix_timestamp() - 3600)
    </select>
=======
    <!--用户注销，微博不可见-->
    <update id="userLeave" parameterType="int">
        UPDATE blog
        SET visibility = 1
        WHERE
        user_id=#{uid}
    </update>
>>>>>>> 1fb43666c2ae8e677fca7edff8735b3e7ea5beab
</mapper>