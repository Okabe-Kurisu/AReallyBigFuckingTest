<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="weibo/MessageMapper">
    <!--用户发送私信-->
    <insert id="sendMassage" parameterType="Map">
        INSERT INTO message (user_id,accpeter_id,content,date,is_showName)
        VALUES(#{uid},#{aid},#{content},#{date},#{is_showName})
    </insert>
    <!--用户获得私信发送者-->
    <select id="getSendMassageUserid" parameterType="Map" resultType="Map">
        SELECT * FROM (
            SELECT  DISTINCT u.uid , u.nickname ,u.avatar, m.date
            FROM message AS m
            JOIN user AS u
            ON m.accpeter_id = u.uid
            WHERE u.uid = #{uid}
            UNION
            SELECT  DISTINCT s.uid , s.nickname , s.avatar, m.date
            FROM message AS m
            JOIN user AS u
            ON m.user_id = u.uid
            JOIN user AS s
            ON m.accpeter_id = s.uid
            WHERE u.uid = #{uid}
        ) as t
        GROUP BY t.uid
        ORDER BY t.date DESC
    </select>
    <!--通过发送者和接收者的id查看私信-->
    <select id="getMassageUseridAndAccpeter" parameterType="Map" resultType="Map">
        select * FROM message
        where ((accpeter_id=#{uid} and user_id=#{sid}) OR (accpeter_id=#{sid} and user_id=#{uid}))
        and is_showName=#{is_showName} AND is_read=0
        order by date asc
    </select>
    <!--标志已读-->
    <update id="yesRead" parameterType="Map">
       UPDATE message
       set is_read=1 ,read_time = #{idate}
       where
       mid = #{mid}
    </update>
    <delete id="delSession" parameterType="Map">
        DELETE FROM message
        where
        (user_id =#{aid} and accpeter_id =#{uid})
        OR (user_id =#{uid} and accpeter_id =#{aid})
    </delete>
    <!---->
</mapper>